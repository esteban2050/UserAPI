<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5d5a2f8f-8cf9-4052-91e1-839530250723" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/executionHistory/executionHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.4/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.4/fileHashes/resourceHashesCache.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/test/ManagementTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/test/ManagementTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/resources/test/users/get/user-get.feature" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/test/users/get/user-get.feature" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/compileTestJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/compileTestJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/users/get/user-get.feature" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/users/get/user-get.feature" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/karate-reports/karate-summary-json.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/karate-reports/karate-summary-json.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/karate-reports/karate-summary.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/karate-reports/karate-summary.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/karate-reports/karate-tags.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/karate-reports/karate-tags.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/karate-reports/karate-timeline.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/karate-reports/karate-timeline.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/karate-reports/src.test.java.users.get.user-get.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/karate-reports/src.test.java.users.get.user-get.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/karate-reports/src.test.java.users.get.user-get.karate-json.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/karate-reports/src.test.java.users.get.user-get.karate-json.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/karate.log" beforeDir="false" afterPath="$PROJECT_DIR$/target/karate.log" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="UserAPI" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="UserAPI" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="UserAPI" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2IVVIAGOW6Up7qHW51eD1mvWi8K" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="flattenPackages" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/Practicas Automatizacion/BookingAPI/UserAPI/src/test/java/users/delete&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Practicas Automatizacion\BookingAPI\UserAPI\src\test\java\users\delete" />
      <recent name="D:\Practicas Automatizacion\BookingAPI\UserAPI\src\test\java\user\put" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Practicas Automatizacion\BookingAPI\UserAPI\src\test\java\users\post" />
      <recent name="D:\Practicas Automatizacion\BookingAPI\UserAPI\src\test\java\user\delete" />
      <recent name="D:\Practicas Automatizacion\BookingAPI\UserAPI\src\test\java" />
      <recent name="D:\Practicas Automatizacion\BookingAPI\UserAPI\src\test\resources" />
    </key>
  </component>
  <component name="RunManager" selected="Cucumber Java.Scenario: get a list of users and validate using fuzzy matcher(is present one element)">
    <configuration name="Scenario: get a list of user and validate a json area" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
      <option name="CUCUMBER_CORE_VERSION" value="1.2" />
      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/users/get/user-get.feature" />
      <option name="GLUE" value="com.intuit.karate" />
      <option name="MAIN_CLASS_NAME" value="cucumber.api.cli.Main" />
      <module name="UserAPI.test" />
      <option name="NAME_FILTER" value="^get a list of user and validate a json area$" />
      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter --monochrome --name &quot;^get a list of user and validate a json area$&quot;" />
      <option name="SUGGESTED_NAME" value="Scenario: get a list of user and validate a json area" />
      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="cucumber.api.cli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scenario: get a list of user" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
      <option name="CUCUMBER_CORE_VERSION" value="1.2" />
      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/users/get/user-get.feature" />
      <option name="GLUE" value="com.intuit.karate" />
      <option name="MAIN_CLASS_NAME" value="cucumber.api.cli.Main" />
      <module name="UserAPI.test" />
      <option name="NAME_FILTER" value="^get a list of user$" />
      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter --monochrome --name &quot;^get a list of user$&quot;" />
      <option name="SUGGESTED_NAME" value="Scenario: get a list of user" />
      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="cucumber.api.cli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scenario: get a list of users and validate the name of the first user in the array" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
      <option name="CUCUMBER_CORE_VERSION" value="1.2" />
      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/users/get/user-get.feature" />
      <option name="GLUE" value="com.intuit.karate" />
      <option name="MAIN_CLASS_NAME" value="cucumber.api.cli.Main" />
      <module name="UserAPI.test" />
      <option name="NAME_FILTER" value="^get a list of users and validate the name of the first user in the array$" />
      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter --monochrome --name &quot;^get a list of users and validate the name of the first user in the array$&quot;" />
      <option name="SUGGESTED_NAME" value="Scenario: get a list of users and validate the name of the first user in the array" />
      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="cucumber.api.cli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scenario: get a list of users and validate the size of the array" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
      <option name="CUCUMBER_CORE_VERSION" value="1.2" />
      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/users/get/user-get.feature" />
      <option name="GLUE" value="com.intuit.karate" />
      <option name="MAIN_CLASS_NAME" value="cucumber.api.cli.Main" />
      <module name="UserAPI.test" />
      <option name="NAME_FILTER" value="^get a list of users and validate the size of the array$" />
      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter --monochrome --name &quot;^get a list of users and validate the size of the array$&quot;" />
      <option name="SUGGESTED_NAME" value="Scenario: get a list of users and validate the size of the array" />
      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="cucumber.api.cli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scenario: get a list of users and validate using fuzzy matcher(is present one element)" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
      <option name="CUCUMBER_CORE_VERSION" value="1.2" />
      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/users/get/user-get.feature" />
      <option name="GLUE" value="com.intuit.karate" />
      <option name="MAIN_CLASS_NAME" value="cucumber.api.cli.Main" />
      <module name="UserAPI.test" />
      <option name="NAME_FILTER" value="^get a list of users and validate using fuzzy matcher\(is present one element\)$" />
      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter --monochrome --name &quot;^get a list of users and validate using fuzzy matcher\(is present one element\)$&quot;" />
      <option name="SUGGESTED_NAME" value="Scenario: get a list of users and validate using fuzzy matcher(is present one element)" />
      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="cucumber.api.cli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cucumber Java.Scenario: get a list of users and validate using fuzzy matcher(is present one element)" />
        <item itemvalue="Cucumber Java.Scenario: get a list of users and validate the size of the array" />
        <item itemvalue="Cucumber Java.Scenario: get a list of users and validate the name of the first user in the array" />
        <item itemvalue="Cucumber Java.Scenario: get a list of user and validate a json area" />
        <item itemvalue="Cucumber Java.Scenario: get a list of user" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5d5a2f8f-8cf9-4052-91e1-839530250723" name="Changes" comment="" />
      <created>1670266654422</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1670266654422</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>